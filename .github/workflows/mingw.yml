name: mingw 

on: [push]

jobs:
  build:
    name: build

    strategy:
      matrix:
        os: [windows-2019]
        # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
        BUILD_TYPE: [Release, Debug]

    env:
      SOURCE_DIR:  ${{github.workspace}}\.cache\source
      TOOSL_DIR:   ${{github.workspace}}\.cache\tools
      INSTALL_DIR: ${{github.workspace}}\.cache\install_msvc_${{matrix.triplet}}_${{matrix.BUILD_TYPE}}
    
    defaults:
      run:
        shell: cmd
        
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: 'true'

    - uses: snickerbockers/submodules-init@v4

    - name: make directory
      run: |
        cmake -E make_directory ${{env.SOURCE_DIR}}
        cmake -E make_directory ${{env.TOOSL_DIR}}
        cmake -E make_directory ${{env.INSTALL_DIR}}

    - name: pacman
      env:
        PATH: C:\msys64\usr\bin
      run: | 
        C:\msys64\usr\bin\pacman.exe -S --noconfirm mingw-w64-x86_64-cmake ^
            mingw-w64-x86_64-make ^
            mingw-w64-x86_64-nsis ^
            mingw-w64-x86_64-gcc ^
            mingw-w64-x86_64-qt5 ^
            mingw-w64-x86_64-qtwebkit ^
            mingw-w64-x86_64-zlib ^
            git base-devel
  
    - name: git clone RabbitCommon
      working-directory: ${{env.SOURCE_DIR}}
      run: git clone https://github.com/KangLin/RabbitCommon.git

    - name: build LunarCalendar
      working-directory: ${{github.workspace}}
      env:
        RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
        #Qt5_Dir: C:\msys64\mingw64
        MSYSTEM: MINGW64
        PATH: C:\msys64\mingw64\bin;C:\msys64\usr\bin
      run: |
        cmake -E make_directory build
        cd build
        cmake .. -G"MinGW Makefiles" ^
            -DCMARK_SHARED=OFF ^
            -DCMARK_TESTS=OFF ^
            -DCMARK_STATIC=ON ^
            -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} ^
            -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/install
        cmake --build . --config ${{ matrix.BUILD_TYPE }}
        cmake --build . --config ${{ matrix.BUILD_TYPE }} --target install

    - name: Package
      working-directory: ${{github.workspace}}/build
      run: |
        move /Y install\plugins\*crypto*.dll install\bin
        move /Y install\plugins\*ssl*.dll install\bin
        copy /Y C:\msys64\mingw64\bin\*.dll install\bin
        copy /Y ${{env.INSTALL_DIR}}\bin\*.dll install\bin
        copy /Y ${{env.INSTALL_DIR}}\lib\*.dll install\bin
        makensis ${{github.workspace}}/build/Install.nsi
