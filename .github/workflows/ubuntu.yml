name: build_ubuntu

on:
  workflow_call:
    outputs:
      name:
        description: "The artifact name"
        value: ${{ jobs.build_ubuntu.outputs.name }}

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  build_ubuntu:
    strategy:
      matrix:
        BUILD_TYPE: [Release, Debug]

    runs-on: ubuntu-latest

    env:
      SOURCE_DIR:  ${{github.workspace}}/.cache/source
      TOOSL_DIR:   ${{github.workspace}}/.cache/tools
      INSTALL_DIR: ${{github.workspace}}/.cache/install_ubuntu
      LunarCalendar_VERSION: 0.0.28
      artifact_name: build_ubuntu

    # Map the job outputs to step outputs
    outputs:
      name: ${{ env.artifact_name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Make directories
        run: |
          cmake -E make_directory ${{env.SOURCE_DIR}}
          cmake -E make_directory ${{env.TOOSL_DIR}}
          cmake -E make_directory ${{env.INSTALL_DIR}}
          cmake -E make_directory ${{github.workspace}}/build

      - name: git clone RabbitCommon
        working-directory: ${{env.SOURCE_DIR}}
        run: |
          git clone https://github.com/KangLin/RabbitCommon.git

      - name: Install apt packages
        run: |
          sudo apt update
          sudo apt upgrade
          sudo apt install xvfb xpra \
              libglu1-mesa-dev libpulse-mainloop-glib0 \
              cmake build-essential \
              debhelper fakeroot graphviz \
              qt6-tools-dev qt6-tools-dev-tools \
              qt6-base-dev qt6-base-dev-tools qt6-qpa-plugins \
              qt6-l10n-tools qt6-translations-l10n \
              qt6-scxml-dev qt6-webengine-dev qt6-webengine-dev-tools \
              libsqlite3-dev

      - name: Cache installed
        uses: actions/cache@v3
        id: cache-installed
        with:
          path: |
            ${{env.INSTALL_DIR}}
          key: cache-installed-ubuntu

      - name: Build develop library
        working-directory: ${{github.workspace}}/build
        env:
          RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
        run: |
          cmake ${{github.workspace}} \
            -DCMARK_SHARED=OFF \
            -DCMARK_TESTS=OFF \
            -DCMARK_STATIC=ON \
            -DINSTALL_QT=OFF \
            -DBUILD_APP=OFF \
            -DCMAKE_BUILD_TYPE=${{ matrix.BUILD_TYPE }} \
            -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/build/install \
            -DCMAKE_PREFIX_PATH=${{env.INSTALL_DIR}}/lib/cmake
          cmake --build . --config ${{ matrix.BUILD_TYPE }} --target install
          7z a LunarCalendar_${{env.LunarCalendar_VERSION}}_ubuntu.zip ./install/*

      - name:  Update artifact for develop library
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact_name }}
          path: |
            ${{github.workspace}}/build/LunarCalendar_${{env.LunarCalendar_VERSION}}_ubuntu.zip
      
      - name: build_debpackage.sh
        working-directory: ${{github.workspace}}
        env:
          RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
        run: |
          export Qt6_DIR=/usr/lib/`uname -a`-linux-gnu/cmake/Qt6
          ./build_debpackage.sh
          cp ../lunarcalendar_${{env.LunarCalendar_VERSION}}_amd64.deb lunarcalendar_${{env.LunarCalendar_VERSION}}_amd64.deb

      - name:  Update artifact for application
        if: ${{ matrix.BUILD_TYPE == 'Release' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact_name }}
          path: |
            ${{github.workspace}}/lunarcalendar_*.deb
