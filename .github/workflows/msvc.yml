name: msvc

on:
  workflow_call:
    outputs:
      name:
        description: "The artifact name"
        value: ${{ jobs.build_msvc.outputs.name }}

jobs:
  build_msvc:

    strategy:
      matrix:
        BUILD_TYPE: [Release, Debug]
        qt_version: [6.5.1, 5.15.2, 5.12.12]
        include:
          - qt_version: 6.5.1
            triplet: x64-windows
            VCPKG_PLATFORM_TOOLSET: v142
            qt_arch: win64_msvc2019_64
            CMAKE_GENERATOR_PLATFORM: x64
            qt_modules: qtscxml qtwebchannel qtwebsockets qtwebview qtpositioning

          - qt_version: 5.15.2
            triplet: x64-windows
            VCPKG_PLATFORM_TOOLSET: v142
            qt_arch: win64_msvc2019_64
            CMAKE_GENERATOR_PLATFORM: x64

          - qt_version: 5.12.12
            triplet: x86-windows
            VCPKG_PLATFORM_TOOLSET: v141
            qt_arch: win32_msvc2017
            CMAKE_GENERATOR_PLATFORM: Win32

    runs-on: windows-latest

    env:
      SOURCE_DIR:  ${{github.workspace}}\.cache\source
      TOOSL_DIR:   ${{github.workspace}}\.cache\tools
      INSTALL_DIR: ${{github.workspace}}\.cache\install_msvc_qt${{matrix.qt_version}}_${{matrix.triplet}}_${{matrix.BUILD_TYPE}}
      CMAKE_GENERATOR: "Visual Studio 17 2022"
      VCPKG_PLATFORM_TOOLSET: ${{matrix.VCPKG_PLATFORM_TOOLSET}}
      CMAKE_GENERATOR_PLATFORM: ${{matrix.CMAKE_GENERATOR_PLATFORM}}
      LunarCalendar_VERSION: v0.2.6
      VCPKGGITCOMMITID: 5ac89392d779288ec8073ebba69cf12d3537f6d7
      qt_modules: qtwebengine ${{matrix.qt_modules}}
      artifact_name: build_msvc

    # Map the job outputs to step outputs
    outputs:
      name: ${{ env.artifact_name }}

    defaults:
      run:
        shell: cmd

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: make directory
        run: |
          cmake -E make_directory ${{env.SOURCE_DIR}}
          cmake -E make_directory ${{env.TOOSL_DIR}}
          cmake -E make_directory ${{env.INSTALL_DIR}}
          cmake -E make_directory ${{github.workspace}}/build
          cmake -E make_directory ${{github.workspace}}/build_app

      - name: Cache installed
        uses: actions/cache@v3
        id: cache-installed
        with:
          path: |
            ${{env.INSTALL_DIR}}
          key: cache-installed-msvc

      - name: run-vcpkg
        uses: lukka/run-vcpkg@v7.4
        with:
          vcpkgGitCommitId: ${{env.VCPKGGITCOMMITID}}
          vcpkgDirectory: ${{runner.workspace}}/vcpkg/
          # Since the cache must be invalidated when content of the vcpkg.json file changes, let's
          # compute its hash and append this to the computed cache's key.
          appendedCacheKey: cache-vcpkg-msvc-${{matrix.os}}-vc${{matrix.VCPKG_PLATFORM_TOOLSET}}-${{matrix.triplet}}-qt${{matrix.qt_version}}-${{matrix.BUILD_TYPE}}-${{env.VCPKGGITCOMMITID}}
          vcpkgTriplet: '${{matrix.triplet}}'
          vcpkgArguments: 'zlib openssl sqlite3'

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1  # not v2!
        with:
          path: ${{env.TOOSL_DIR}}/qt
          key: qt_${{matrix.qt_version}}_${{matrix.qt_arch}}

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          dir: '${{env.TOOSL_DIR}}/qt' # optional
          version: '${{matrix.qt_version}}' # optional, default is 5.15.2
          arch: '${{matrix.qt_arch}}' # optional
          modules: '${{env.qt_modules}}' # optional. See: https://ddalcino.github.io/aqt-list-server/
          cached: '${{steps.cache-qt.outputs.cache-hit}}' # optional, default is false
 
      - name: git clone RabbitCommon
        working-directory: ${{env.SOURCE_DIR}}
        run: git clone https://github.com/KangLin/RabbitCommon.git

      - name: Build LunarCalendar develop library
        working-directory: ${{github.workspace}}\build
        env:
          RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
        run: |
          cmake ${{github.workspace}} ^
              -A ${{matrix.CMAKE_GENERATOR_PLATFORM}} ^
              -T ${{matrix.VCPKG_PLATFORM_TOOLSET}} ^
              -DCMARK_SHARED=OFF ^
              -DCMARK_TESTS=OFF ^
              -DCMARK_STATIC=ON ^
              -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} ^
              -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/install ^
              -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake ^
              -DVCPKG_VERBOSE=ON ^
              -DX_VCPKG_APPLOCAL_DEPS_INSTALL=OFF ^
              -DVCPKG_APPLOCAL_DEPS=OFF ^
              -DBUILD_QUIWidget=OFF ^
              -DINSTALL_QT=OFF ^
              -DBUILD_APP=OFF
          cmake --build . --config ${{ matrix.BUILD_TYPE }}
          cmake --build . --config ${{ matrix.BUILD_TYPE }} --target install
          copy /Y ${{env.INSTALL_DIR}}\bin\*.dll install\bin
          copy /Y ${{env.INSTALL_DIR}}\lib\*.dll install\bin
          copy /Y ${{env.RUNVCPKG_VCPKG_ROOT}}\installed\${{env.RUNVCPKG_VCPKG_TRIPLET_OUT}}\bin\*.dll install\bin
          7z a LunarCalendar_${{env.LunarCalendar_VERSION}}_${{matrix.triplet}}_qt${{matrix.qt_version}}_${{matrix.BUILD_TYPE}}.zip .\install\*

      - name: Update artifact for develop library
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact_name }}
          path: |
            ${{github.workspace}}\build\LunarCalendar_${{env.LunarCalendar_VERSION}}_${{matrix.triplet}}_qt${{matrix.qt_version}}_${{matrix.BUILD_TYPE}}.zip
      
      - name: Build LunarCalendar application
        if: ${{ matrix.BUILD_TYPE == 'Release' && matrix.qt_version == '5.12.12' }}
        working-directory: ${{github.workspace}}\build_app
        env:
          RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
        run: |
          cmake ${{github.workspace}} ^
              -A ${{matrix.CMAKE_GENERATOR_PLATFORM}} ^
              -T ${{matrix.VCPKG_PLATFORM_TOOLSET}} ^
              -DCMARK_SHARED=OFF ^
              -DCMARK_TESTS=OFF ^
              -DCMARK_STATIC=ON ^
              -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} ^
              -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build_app/install ^
              -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake ^
              -DVCPKG_VERBOSE=ON ^
              -DX_VCPKG_APPLOCAL_DEPS_INSTALL=ON
          cmake --build . --config ${{ matrix.BUILD_TYPE }}
          cmake --build . --config ${{ matrix.BUILD_TYPE }} --target install
          copy /Y ${{env.INSTALL_DIR}}\bin\*.dll install\bin
          copy /Y ${{env.INSTALL_DIR}}\lib\*.dll install\bin
          copy /Y ${{env.RUNVCPKG_VCPKG_ROOT}}\installed\${{env.RUNVCPKG_VCPKG_TRIPLET_OUT}}\bin\*.dll install\bin
          makensis Install.nsi

      - name: Update artifact for application
        if: ${{ matrix.BUILD_TYPE == 'Release' && matrix.qt_version == '5.12.12' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact_name }}
          path: |
            ${{github.workspace}}\build_app\LunarCalendar_Setup_${{env.LunarCalendar_VERSION}}.exe
